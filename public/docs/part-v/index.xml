<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Part V on Modern Data Structures and Algorithms in Rust</title>
    <link>http://localhost:1313/docs/part-v/</link>
    <description>Recent content in Part V on Modern Data Structures and Algorithms in Rust</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 24 Aug 2024 23:42:52 +0700</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/part-v/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chapter 27</title>
      <link>http://localhost:1313/docs/part-v/chapter-27/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:45 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-27/</guid>
      <description>ðŸ“˜ Chapter 27: Advanced Recursive Algorithms link&#xD;ðŸ’¡&#xA;&amp;quot;A recursive function calls itself, like a mirror facing a mirror, reflecting a problem into simpler and simpler versions of itself until it vanishes.&amp;quot; â€” Brian Kernighan&#xA;ðŸ“˜&#xA;Chapter 27 DSAR delves into the intricate mechanisms of recursion, exploring its theoretical underpinnings, practical applications, and advanced techniques within the Rust programming language. The chapter begins by laying a solid foundation with an introduction to recursion, emphasizing the importance of base cases, stack management, and Rustâ€™s unique handling of ownership and borrowing in recursive functions.</description>
    </item>
    <item>
      <title>Chapter 28</title>
      <link>http://localhost:1313/docs/part-v/chapter-28/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:45 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-28/</guid>
      <description>ðŸ“˜ Chapter 28: Vector, Matrix, and Tensor Operations link&#xD;ðŸ’¡&#xA;&amp;quot;The goal of Computer Science is to build things that work well, and that means dealing with data and algorithms efficiently.&amp;quot; â€” Donald Knuth&#xA;ðŸ“˜&#xA;Chapter 28 of DSAR delves into the essential operations and optimizations for vectors, matrices, and tensors, which are pivotal in computational mathematics and data science. It begins with an introduction to vector operations, covering fundamental concepts like vector addition, scalar multiplication, and dot products, while emphasizing practical implementations in Rust using efficient data structures.</description>
    </item>
    <item>
      <title>Chapter 29</title>
      <link>http://localhost:1313/docs/part-v/chapter-29/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:46 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-29/</guid>
      <description>ðŸ“˜ Chapter 29: Parallel and Distributed Algorithms link&#xD;ðŸ’¡&#xA;&amp;quot;Parallel programming is not about making programs faster, but about creating solutions that can solve larger problems or provide more accurate results than serial algorithms alone.&amp;quot; â€” Jeff Dean&#xA;ðŸ“˜&#xA;Chapter 29 of the DSAR book delves into the intricate world of parallel and distributed computing, emphasizing the need for efficient and scalable solutions in modern computing environments. It begins with a foundational overview of parallel computing, exploring essential concepts such as data and task parallelism, and the impact of parallel architectures on performance.</description>
    </item>
    <item>
      <title>Chapter 30</title>
      <link>http://localhost:1313/docs/part-v/chapter-30/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:47 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-30/</guid>
      <description>ðŸ“˜ Chapter 30: Cryptographic Foundations Algorithms link&#xD;ðŸ’¡&#xA;&amp;quot;To keep a system secure, we need to be always on our toes. If we wait for the attackers to find vulnerabilities, itâ€™s already too late.&amp;quot; â€” Whitfield Diffie&#xA;ðŸ“˜&#xA;Chapter 30 of DSAR delves into the essential algorithms and principles of cryptography, elucidating its foundational role in securing modern digital communications and data. It begins with an introduction to cryptography, exploring its historical evolution from classical ciphers to contemporary algorithms that address key security objectives: confidentiality, integrity, authentication, and non-repudiation.</description>
    </item>
    <item>
      <title>Chapter 31</title>
      <link>http://localhost:1313/docs/part-v/chapter-31/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:48 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-31/</guid>
      <description>ðŸ“˜ Chapter 31: Blockchain Data Structures and Algorithms link&#xD;ðŸ’¡&#xA;&amp;quot;Blockchain is the tech. Bitcoin is merely the first mainstream manifestation of its potential.&amp;quot; â€” Marc Kenigsberg&#xA;ðŸ“˜&#xA;Chapter 31 of DSAR provides a comprehensive exploration of blockchain technology, focusing on its data structures, consensus algorithms, and practical applications. It begins with an introduction to blockchain technology, emphasizing its decentralized nature, immutability, and reliance on cryptographic hash functions to ensure data integrity and security.</description>
    </item>
    <item>
      <title>Chapter 32</title>
      <link>http://localhost:1313/docs/part-v/chapter-32/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:49 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-32/</guid>
      <description>ðŸ“˜ Chapter 32: Linear Programming link&#xD;ðŸ’¡&#xA;&amp;quot;Optimization is a powerful tool for solving many types of problems in both science and engineering, and linear programming provides one of the most fundamental and versatile approaches to this challenge.&amp;quot; â€” John Nash&#xA;ðŸ“˜&#xA;Chapter 32 of DSAR provides a comprehensive exploration of linear programming (LP), a pivotal technique in optimization. The chapter begins with an in-depth introduction to LP, detailing its core components including objective functions, constraints, and decision variables.</description>
    </item>
    <item>
      <title>Chapter 33</title>
      <link>http://localhost:1313/docs/part-v/chapter-33/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:49 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-33/</guid>
      <description>ðŸ“˜ Chapter 33: Polynomial and FFT link&#xD;ðŸ’¡&#xA;&amp;quot;Algorithms are the backbone of modern computing. Without them, even the most powerful hardware would be rendered useless.&amp;quot; â€” Donald D. Knuth&#xA;ðŸ“˜&#xA;Chapter 33 of the DSAR book delves into the intricacies of polynomials and the Fast Fourier Transform (FFT), focusing on both their theoretical foundations and practical applications. It begins with a detailed examination of polynomials, covering their basic properties, operations (addition, subtraction, multiplication, and division), and evaluation techniques, particularly Hornerâ€™s method.</description>
    </item>
    <item>
      <title>Chapter 34</title>
      <link>http://localhost:1313/docs/part-v/chapter-34/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:50 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-34/</guid>
      <description>ðŸ“˜ Chapter 34: String Matching Algorithms link&#xD;ðŸ’¡&#xA;&amp;quot;Algorithmic thinking is a fundamental part of our toolbox, helping us solve problems with precision and elegance.&amp;quot; â€” Donald E. Knuth&#xA;ðŸ“˜&#xA;Chapter 34 of DSAR book offers a detailed exploration of string matching algorithms, covering both foundational and advanced techniques. It begins with an introduction to the string matching problem, emphasizing its significance in fields such as text search, bioinformatics, and data retrieval.</description>
    </item>
    <item>
      <title>Chapter 35</title>
      <link>http://localhost:1313/docs/part-v/chapter-35/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:51 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-35/</guid>
      <description>ðŸ“˜ Chapter 35: Approximate Algorithms link&#xD;ðŸ’¡&#xA;&amp;quot;Algorithms are the soul of computing, and the pursuit of approximate algorithms is the art of making the impossible possible, where exactness gives way to practicality.&amp;quot; â€” David P. Williamson&#xA;ðŸ“˜&#xA;Chapter 35 of DSAR delves into the critical domain of approximate algorithms, offering a comprehensive exploration of their theory, techniques, and practical implementation in Rust. The chapter begins by defining approximate algorithms, emphasizing their role in providing feasible solutions to computationally intractable problems, such as NP-hard and NP-complete challenges, where exact solutions are impractical.</description>
    </item>
    <item>
      <title>Chapter 36</title>
      <link>http://localhost:1313/docs/part-v/chapter-36/</link>
      <pubDate>Sat, 24 Aug 2024 23:42:52 +0700</pubDate>
      <guid>http://localhost:1313/docs/part-v/chapter-36/</guid>
      <description>ðŸ“˜ Chapter 36: Probabilistic and Randomized Algorithms link&#xD;&amp;ldquo;To me, a good algorithm is a beautiful thing, but its beauty is often in its simplicity. The most complex algorithms are those that use randomization effectively to simplify otherwise complex problems.&amp;rdquo; â€“ Donald E. Knuth&#xA;ðŸ“˜&#xA;Chapter 36 of DSAR book delves into the sophisticated realm of probabilistic and randomized algorithms, providing a comprehensive exploration of their theoretical foundations, practical applications, and associated challenges.</description>
    </item>
  </channel>
</rss>
